// ReSharper disable UnusedMember.Global
// ReSharper disable InconsistentNaming
// ReSharper disable once CheckNamespace
namespace Exomia.Vulkan.Api.Provisional;

/// <summary> VkVideoEncodeInfoKHR - Structure to chain codec-specific structures to - <a href="https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeInfoKHR.html">https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeInfoKHR.html</a></summary>
[StructLayout(LayoutKind.Sequential)]
public unsafe struct VkVideoEncodeInfoKHR {
    /// <summary> The stype of this structure. </summary>
    public const VkStructureType STYPE = VK_STRUCTURE_TYPE_VIDEO_ENCODE_INFO_KHR;

    /// <summary>sType is the type of this structure.</summary>
    public VkStructureType sType;
    /// <summary>pNext is a pointer to a structure extending this structure. A codec-specific extension structure must be chained to specify what bitstream unit to generate with this encode operation.</summary>
    public void* pNext;
    /// <summary>flags is a bitmask of VkVideoEncodeFlagBitsKHR specifying encode flags, and is reserved for future versions of this specification.</summary>
    public VkVideoEncodeFlagsKHR flags;
    /// <summary>qualityLevel is the coding quality level of the encoding. It is defined by the codec-specific extensions.</summary>
    public uint qualityLevel;
    /// <summary>codedExtent is the coded size of the encode operations.</summary>
    public VkExtent2D codedExtent;
    /// <summary>dstBitstreamBuffer is the buffer where the encoded bitstream output will be produced.</summary>
    public VkBuffer dstBitstreamBuffer;
    /// <summary>dstBitstreamBufferOffset is the offset in the dstBitstreamBuffer where the encoded bitstream output will start. dstBitstreamBufferOffset&#8217;s value must be aligned to VkVideoCapabilitiesKHR::minBitstreamBufferOffsetAlignment, as reported by the implementation.</summary>
    public VkDeviceSize dstBitstreamBufferOffset;
    /// <summary>dstBitstreamBufferMaxRange is the maximum size of the dstBitstreamBuffer that can be used while the encoded bitstream output is produced. dstBitstreamBufferMaxRange&#8217;s value must be aligned to VkVideoCapabilitiesKHR::minBitstreamBufferSizeAlignment, as reported by the implementation.</summary>
    public VkDeviceSize dstBitstreamBufferMaxRange;
    /// <summary>srcPictureResource is the Picture Resource of the Input Picture to be encoded by the operation.</summary>
    public VkVideoPictureResourceKHR srcPictureResource;
    /// <summary>pSetupReferenceSlot is a pointer to a VkVideoReferenceSlotKHR structure used for generating a reconstructed reference slot and Picture Resource. pSetupReferenceSlot-&gt;slotIndex specifies the slot index number to use as a target for producing the Reconstructed (DPB) data. pSetupReferenceSlot must be one of the entries provided in VkVideoBeginCodingInfoKHR via the pReferenceSlots within the vkCmdBeginVideoCodingKHR command that established the Vulkan Video Encode Context for this command.</summary>
    public VkVideoReferenceSlotKHR* pSetupReferenceSlot;
    /// <summary>referenceSlotCount is the number of Reconstructed Reference Pictures that will be used when this encoding operation is executing.</summary>
    public uint referenceSlotCount;
    /// <summary>pReferenceSlots is NULL or a pointer to an array of VkVideoReferenceSlotKHR structures that will be used when this encoding operation is executing. Each entry in pReferenceSlots must be one of the entries provided in VkVideoBeginCodingInfoKHR via the pReferenceSlots within the vkCmdBeginVideoCodingKHR command that established the Vulkan Video Encode Context for this command.</summary>
    public VkVideoReferenceSlotKHR* pReferenceSlots;
    /// <summary>precedingExternallyEncodedBytes is the number of bytes externally encoded for insertion in the active video encode session overall bitstream prior to the bitstream that will be generated by the implementation for this instance of VkVideoEncodeInfoKHR. Valid when VkVideoEncodeRateControlInfoKHR::rateControlModeis not VK_VIDEO_ENCODE_RATE_CONTROL_MODE_NONE_BIT_KHR. The value provided is used to update the implementation&#8217;s rate control algorithm for the rate control layer this instance of VkVideoEncodeInfoKHR belongs to, by accounting for the bitrate budget consumed by these externally encoded bytes. See VkVideoEncodeRateControlInfoKHR for additional information about encode rate control.</summary>
    public uint precedingExternallyEncodedBytes;
}
