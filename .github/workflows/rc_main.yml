name: '[RC] main'
on:
  push:
    branches:
      - 'rc/v*'
jobs:
  get-rc-info:
    runs-on: ubuntu-latest
    outputs:
      rc-version: ${{ steps.rc-version.outputs.rc-version }}
      rc-suffix: ${{ steps.rc-suffix.outputs.rc-suffix }}
    steps:
    - name: 'set rc-version'
      id: rc-version
      run: |
        echo "::set-output name=rc-version::${GITHUB_REF#refs/heads/rc/v}"
    - uses: octokit/request-action@v2.x
      id: package-versions
      with:
        route: GET /orgs/exomia/packages/nuget/Exomia.Vulkan.Api.Core/versions
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: 'set rc-suffix'
      id: rc-suffix
      run: |
        echo "::set-output name=rc-suffix::-rc.$(echo '${{ steps.package-versions.outputs.data }}' | jq '[.[] | select(.name | startswith("${{ steps.rc-version.outputs.rc-version }}-rc."))] | length')"
  print-information:
    needs: [get-rc-info]
    runs-on: ubuntu-latest
    steps:
    - name: 'print information'
      run: |
        echo "rc-version: ${{ needs.get-rc-info.outputs.rc-version }}"
        echo "rc-suffix: ${{ needs.get-rc-info.outputs.rc-suffix }}"
  build-core:
    needs: [get-rc-info]
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        configurations: [Debug, Release]
        platforms: [Any CPU, x64]
    name: 'build core in ${{ matrix.configurations }} on ${{ matrix.os }} for ${{ matrix.platforms }}'
    runs-on: ${{ matrix.os }}
    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps: 
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v1   
      with:
        dotnet-version: '6.0.x'
    - run: |
        dotnet build Exomia.Vulkan.Api.Core.sln --restore --configuration ${{ matrix.configurations }} --force --nologo --version-suffix "${{ needs.get-rc-info.outputs.rc-suffix }}" -p:Platform="${{ matrix.platforms }}"
  publish-core-on-github:
    needs: [get-rc-info, build-core]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platforms: [Any CPU, x64]
    permissions:
      packages: write 
    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v1   
      with:
        dotnet-version: '6.0.x'
    - run: |  
        dotnet pack Exomia.Vulkan.Api.Core.sln --restore --configuration Debug --force --nologo --output ~/.packages --version-suffix "${{ needs.get-rc-info.outputs.rc-suffix }}" -p:Platform="${{ matrix.platforms }}"
    - name: 'publish ${{ github.repository }} to github'
      run: |  
        dotnet nuget push ~/.packages/*.nupkg --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --api-key ${{ github.token }} --skip-duplicate
  check:
    if: ${{ always() }}  
    name: '[CHECK] RC SUCCESS'
    needs: [build-core, publish-core-on-github]
    runs-on: ubuntu-latest
    steps:
    - name: '[CHECK] build-core status'
      if: ${{ needs.build-core.result != 'success' }}
      run: exit 1
    - name: '[CHECK] publish-core-on-github status'
      if: ${{ needs.publish-core-on-github.result != 'success' }}
      run: exit 1