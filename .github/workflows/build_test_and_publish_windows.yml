name: "[project windows] build, test & publish"
on: 
  workflow_dispatch:
    inputs:
      version:
        description: |
          # Specify the project version format:
            major.minor.patch[-rc|beta|alpha].X  
        required: true
        default: '0.0.0'
env:  
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    DOTNET_NOLOGO: 1
    DOTNET_CLI_TELEMETRY_OPTOUT: 1
jobs:
  build-windows:
    name: "[project windows] build release and debug for windows"
    runs-on: windows-latest
    steps: 
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v1   
      with:
        dotnet-version: 5.0.101
    - name: build debug
      run: |
        dotnet build --configuration Debug --force --nologo -p:Platform=AnyCPU
        dotnet build --configuration Debug --force --nologo -p:Platform=x86
        dotnet build --configuration Debug --force --nologo -p:Platform=x64
      working-directory: src/Exomia.Vulkan.Api.Windows
    - name: build release
      run: |
        dotnet build --configuration Release --force --nologo -p:Platform=AnyCPU
        dotnet build --configuration Release --force --nologo -p:Platform=x86
        dotnet build --configuration Release --force --nologo -p:Platform=x64
      working-directory: src/Exomia.Vulkan.Api.Windows
  test-windows:   
    name: "[project windows] test release and debug for windows"
    needs: [build-windows]
    runs-on: windows-latest
    steps:    
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v1   
      with:
        dotnet-version: 5.0.101
    - name: test debug
      run: |
        dotnet test --configuration Debug --nologo -p:Platform=AnyCPU
        dotnet test --configuration Debug --nologo -p:Platform=x86
        dotnet test --configuration Debug --nologo -p:Platform=x64
      working-directory: tests/L0/Exomia.Vulkan.Api.Windows.Tests
    - name: test release
      run: |
        dotnet test --configuration Release --nologo -p:Platform=AnyCPU
        dotnet test --configuration Release --nologo -p:Platform=x86
        dotnet test --configuration Release --nologo -p:Platform=x64
      working-directory: tests/L0/Exomia.Vulkan.Api.Windows.Tests
  publish-github-windows:
    name: "[project windows] publish debug for windows on github"
    needs: [test-windows]
    runs-on: windows-latest
    steps:    
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v1   
      with:
        dotnet-version: 5.0.101
    - name: publish ${{ github.repository }} [v${{ github.event.inputs.version }}]
      run: |
        dotnet pack --configuration Debug --verbosity m --force --nologo -p:Platform=AnyCPU -p:Version=${{ github.event.inputs.version }}
        dotnet pack --configuration Debug --verbosity m --force --nologo -p:Platform=x86 -p:Version=${{ github.event.inputs.version }}
        dotnet pack --configuration Debug --verbosity m --force --nologo -p:Platform=x64 -p:Version=${{ github.event.inputs.version }}
        for f in ./*.nupkg
           do
             STATUSCODE=$(curl -sSX PUT --retry 3 -o /dev/null -w "%{http_code}" -u "${{ github.repository_owner }}:${{ github.token }}" -F package=@$f https://nuget.pkg.github.com/${{ github.repository_owner }}/)
             echo "[$STATUSCODE:https://nuget.pkg.github.com/${{ github.repository_owner }}/] $f"
             if [ "${STATUSCODE}" != 200 ] && [ "${STATUSCODE}" != 409 ]; then exit 1; fi
           done
      shell: bash
      working-directory: src/Exomia.Vulkan.Api.Windows
  publish-nuget-windows:
    name: "[project windows] publish release for windows on nuget"
    needs: [test-windows, publish-github-windows]
    runs-on: windows-latest
    steps:    
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v1   
      with:
        dotnet-version: 5.0.101
    - name: publish ${{ github.repository }} [v${{ github.event.inputs.version }}]
      run: |
        dotnet pack --configuration Release --verbosity m --force --nologo -p:Platform=AnyCPU -p:Version=${{ github.event.inputs.version }}
        dotnet pack --configuration Release --verbosity m --force --nologo -p:Platform=x86 -p:Version=${{ github.event.inputs.version }}
        dotnet pack --configuration Release --verbosity m --force --nologo -p:Platform=x64 -p:Version=${{ github.event.inputs.version }}
        dotnet nuget push **/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.EXOMIA_NUGET_API_KEY_PUSH }} --skip-duplicate
      shell: bash
      working-directory: src/Exomia.Vulkan.Api.Windows
