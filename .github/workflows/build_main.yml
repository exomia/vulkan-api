name: '[BUILD] main'
on:
  push:
    branches:
      - 'master'
jobs:
  build-core:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        configurations: [Debug, Release]
        platforms: [Any CPU, x64]
    name: 'build core in ${{ matrix.configurations }} on ${{ matrix.os }} for ${{ matrix.platforms }}'
    runs-on: ${{ matrix.os }}
    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps: 
    - uses: actions/checkout@v3
    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'
    - run: |
        dotnet build Exomia.Vulkan.Api.Core.sln --configuration ${{ matrix.configurations }} --force --nologo -p:Platform="${{ matrix.platforms }}"
  build-platforms:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        configurations: [Debug, Release]
        platforms: [Any CPU, x64]
    name: 'build platform in ${{ matrix.configurations }} on ${{ matrix.os }} for ${{ matrix.platforms }}'
    runs-on: ${{ matrix.os }}
    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps: 
    - uses: actions/checkout@v3
    - uses: actions/setup-dotnet@v3 
      with:
        dotnet-version: '7.0.x'
    - run: |
        dotnet build Exomia.Vulkan.Api.Platforms.sln --configuration ${{ matrix.configurations }} --force --nologo -p:Platform="${{ matrix.platforms }}"
  check-build:
    if: ${{ always() }}  
    name: '[CHECK] BUILD SUCCESS'
    needs: [build-core, build-platforms]
    runs-on: ubuntu-latest
    steps:
    - name: '[CHECK] build-core status'
      if: ${{ needs.build-core.result != 'success' }}
      run: exit 1
    - name: '[CHECK] build-platforms status'
      if: ${{ needs.build-platforms.result != 'success' }}
      run: exit 1
